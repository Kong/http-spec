name: Setup Node with Yarn Dependencies
description: Reusable composition of setup-node, cache, and yarn install actions
inputs:
  force-install:
    description: When 'true', yarn install will be executed regardless of a cache hit
    required: false
    default: 'false'
outputs:
  cache-hit:
    description: Whether or not there was a cache hit
    value: ${{ steps.dependency-cache.outputs.cache-hit }}
runs:
  using: composite
  steps:
    - name: get Node version
      id: node-version
      shell: bash
      run: |
        voltaNodeVersion=$(cat package.json|jq -r ".volta.node")
        if [[ $voltaNodeVersion == null ]]; then
          voltaNodeVersion="${{ inputs.nodejs-version }}"
        fi
        echo "node-version=${voltaNodeVersion}">> $GITHUB_OUTPUT

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.node-version.outputs.node-version }}

    - name: Dependency Cache
      id: dependency-cache
      uses: actions/cache@v4
      with:
        path: |
          **/node_modules
        # Hard-coded NodeJS version must manually be kept in-sync with setup-node.node-version as setup-node action does not output the version.
        key: yarn-${{ steps.node-version.outputs.node-version }}-${{ runner.os }}-${{ hashFiles('**/yarn.lock', '**/package.json') }}

    - name: Install Dependencies
      if: ${{ inputs.force-install == 'true' || steps.dependency-cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        yarn --frozen-lockfile --production=false
